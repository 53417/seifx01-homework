notes 2019-08-20

ARRAYS

// useing a for loop
for(let i=0; i<names.length; i++) {
   console.log(names[i]);
}

// useing the foreach method
names.forEach(function(value){
   console.log(names[i]);
});

TERMINAL visual modifiers
\t = tab 
\ = escape character
\n = new line

Exercise: Make array, list them fwd and bkwds

let numbers = [01,02,03,04,05,06,07,08,09,10];

for(let i = numbers.length - 1; i <= numbers.length; i = i - 1) {
  console.log(i + '\t' + numbers[i]);
  if( i < 1) {
    break;
  }
};

/* cleaner + better
for(let i = numbers.length-1; i >= 0; i--) {
  console.log(i + '\t' + numbers[i]);
}
*/

FUNCTIONS for ARRAYS
reverse() 
	reverses all values of the array

forEach()
	do something to each value in the array

.]]]]]]
splice(x, y, z)
	x = index
	y = number of items to delete FROM x
	z = item to insert (optional)

Unit testing - program that checks if functionality of the code is correct

use it to search shit

let fruits = ['apple', 'banana', 'coconut', 'durian', 'egg'];

function ArrayIncludes(arr, value){
  for(let i=0; i<arr.length; i++){
    if( arr[i] == value )
      return true;
  };
  return false;
};


	ARRAY INCLUDES AS A FOR LOOP
function ArrayIncludes(arr, value) {
  for(let i=0; i<arr.length; i++) {
    if( arr[i] == value )
      return true;
  }
  return false;
};

	INDEXOF AS A FOR LOOP
function ArrayIndexOf(arr, value) {
  for(let i=0; i<arr.length; i++) {
    if( arr[i] === value )
      return i;
  }
  return '-1';
};

	COUNTVALUES AS A FOR LOOP
function CountValues(arr, value) {
  let valueCounter = 0;
  for(let i=0; i<arr.length; i++) {
    if( arr[i] === value )
      valueCounter = valueCounter + 1
  }
  return valueCounter;
};
	
	COUNTVALUES AS A WHILE LOOP
function CountValues(arrayToCheck, valueToCheck) {
    let count = 0;
    let index = 0;
    while (index < arrayToCheck.length) {
        if (arrayToCheck[index] === valueToCheck) {
            count = count + 1;
        }
        index = index + 1;
    }
    return count;
}

	FOREACH AS A FOR LOOP
function ArrayForEach(arr, fn) {
  for(let i=0; i<arr.length; i++) {
    fn(arr[i]);
  }
};

	MAPPING
let newFruits = fruits.map(function(value){
  return value.toUpperCase();
});
console.log(newFruits);

	FILTERING
let fruitsWithAnA = names.filter(function(value){
  return value.includes('a');
});

EXERCISE: 

Starting with an empty array called rainbowColors:

Add "orange" to the end of the array
Add "red" to the start of the array
Add "yellow" to the end
Add "green", "blue", "indigo", and "violet" to the end of the array
Try and do this using one method
Log out the length of the array
Log out the second item
Log out the last item (make this flexible/dynamic!)
Log out the index of the string "blue"
Bonus: Find out the difference between .slice and .splice
Create an array called twoColors using one method - don't change the rainbowColors array! Essentially pull two colors out of the array (say, between the index of 1 and 3)
Starting with this array var nums = [0, 1, 2, 2, 2, 3, 3, 4, 5];, remove the duplicates destructively using slice or splice (whichever one is appropriate)
Bonus: Work with arrays of arrays
Starting with this array var arrOfArrs = [["inner array first item", "inner array second item"], ["first", "second", "third"]];
Access "inner array first item" and print it out"
Print "third" by using a dynamic index
Bonus Bonus: Loop through the second inner array! Print out first, then second, then third
Your top choices
Create an array to hold your top five choices of something (dogs, books, presidents, whatever). If you choose movies, the right top choice is "Satantango".

For each choice, log to the screen a string like: "My #1 choice is blue."
Bonus: Change it to log "My 1st choice, "My 2nd choice", "My 3rd choice", picking the right suffix for the number based on what it is.


TEMP

let rainbowColors = [];

rainbowColors.push('orange');
rainbowColors.unshift('red');
rainbowColors.push('yellow');
rainbowColors.push('green','blue','indigo','violet');

rainbowColors = [];

rainbowColors.push('red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet');

console.log(rainbowColors.length);

console.log(rainbowColors[1]);

console.log(rainbowColors[rainbowColors.length]);

console.log(rainbowColors.indexOf('blue'));

//splice() changes the original array whereas slice() doesn't but both of them returns array object.

let twoColors = [];

twoColors[1,3]; 

var nums = [0, 1, 2, 2, 2, 3, 3, 4, 5];

/*
function CountValues(arrayToCheck, valueToCheck) {
    let count = 0;
    let index = 0;
    while (index < arrayToCheck.length) {
        if (arrayToCheck[index] === valueToCheck) {
            count = count + 1;
        }
        index = index + 1;
    }
    return count;
}

function KillDoubles(arr) {
  for(let i=0; i<arr.length; i++) {
    if( CountValues(arr, i) > 1) {
    arr.splice(i,1,'Temp');

    }
  } 
};
this is too hard give up*/

nums.splice(2,1);
nums.splice(2,1);
nums.splice(3,1);

console.log(nums);

var arrOfArrs = [["inner array first item", "inner array second item"], ["first", "second", "third"]];

console.log(arrOfArrs.)

